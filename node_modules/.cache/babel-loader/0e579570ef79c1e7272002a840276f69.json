{"ast":null,"code":"var _jsxFileName = \"/Users/billybarry/work/interview-and-assessments/2022-fe-assessment/src/index.tsx\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { render } from \"react-dom\";\nvar client = new ApolloClient({\n  uri: 'http://localhost:4000',\n  cache: new InMemoryCache()\n});\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (process.env.NODE_ENV === 'development') {\n  var _require = require('./mocks/browser'),\n      worker = _require.worker;\n\n  worker.start();\n}\n\nvar rootElement = document.getElementById(\"root\");\nrender( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 5\n}, this), rootElement);\n/**\n * NOTES;:\n * - Replace custome useAPICall with actual graphql\n * - Have some Material components already imported for example usage\n * - Fix test runner\n * - Choose alternate hosting method\n *  - Have JS Alternative\n */","map":{"version":3,"sources":["/Users/billybarry/work/interview-and-assessments/2022-fe-assessment/src/index.tsx"],"names":["ApolloProvider","ApolloClient","InMemoryCache","render","client","uri","cache","App","process","env","NODE_ENV","require","worker","start","rootElement","document","getElementById"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,GAAG,EAAE,uBADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFqB,CAAjB,CAAf;AAOA,OAAOK,GAAP,MAAgB,OAAhB;;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,iBAAmBC,OAAO,CAAC,iBAAD,CAA1B;AAAA,MAAQC,MAAR,YAAQA,MAAR;;AACAA,EAAAA,MAAM,CAACC,KAAP;AACD;;AAEH,IAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAb,MAAM,eACF,QAAC,cAAD;AAAA,yBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADE,EAKJW,WALI,CAAN;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { render } from \"react-dom\";\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000',\n    cache: new InMemoryCache()\n  });\n  \n\n\nimport App from \"./App\";\n\nif (process.env.NODE_ENV === 'development') {\n    const { worker } = require('./mocks/browser')\n    worker.start()\n  }\n\nconst rootElement = document.getElementById(\"root\");\nrender( (\n    <ApolloProvider>\n        <App />\n    </ApolloProvider>\n)\n, rootElement);\n\n/**\n * NOTES;:\n * - Replace custome useAPICall with actual graphql\n * - Have some Material components already imported for example usage\n * - Fix test runner\n * - Choose alternate hosting method\n *  - Have JS Alternative\n */"]},"metadata":{},"sourceType":"module"}